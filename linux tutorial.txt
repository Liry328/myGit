Linux 简介
Linux 是一种自由和开放源码的类 UNIX 操作系统。
Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。
Linux 英文解释为 Linux is not Unix。
由于 Linux 是自由软件，任何人都可以创建一个符合自己需求的 Linux 发行版（例如Ubuntu）。
Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。
目前国内 Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。


Linux 安装
在官网下载最新版本，将下载的Linux系统刻录成光盘或U盘。
使用光驱或U盘或你下载的Linux ISO文件进行安装。

也可以在Window上安装VMware虚拟机来安装Linux系统。
也可以买云服务器用。


Linux 云服务器
云服务器管理方式比物理服务器更简单高效，无需提前购买昂贵的硬件，即可迅速创建或删除云服务器。
云服务器费用一般在几十到几百不等，可以根据我们的需求配置。
目前市场上的云服务器很多：腾讯云、阿里云、京东云、华为云等。


Linux 系统启动过程
可以分为5个阶段：
内核引导；
运行init；
系统初始化；
建立终端；
用户登录系统。


图形模式与文字模式的切换方式
Linux预设提供六个命令窗口终端机。
默认登录第一个窗口，即tty1。六个窗口分别为tty1,tty2 … tty6，可以通过 Ctrl + Alt + F1 ~ F6 切换。
如果你安装了图形界面，默认情况下是进入图形界面的，此时可以通过 Ctrl + Alt + F1 ~ F6 进入其中一个命令窗口界面。
当你进入命令窗口界面后再返回图形界面只需 Ctrl + Alt + F7 。
如果用的 vmware 虚拟机，命令窗口切换的快捷键为 Alt + Space + F1 ~ F6 。在图形界面下按 Alt + Shift + Ctrl + F1 ~ F6 切换至命令窗口。


Linux 关机
linux大多用在服务器上，很少遇到关机操作。
正确的关机流程为：sync > shutdown > reboot > halt
不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。
关机指令为 shutdown ，可以 man shutdown 来查看帮助文档。
关机的命令有 shutdown –h now、halt、poweroff 和 init 0 ，重启系统的命令有 shutdown –r now、reboot、init 6。


Linux 系统目录结构
登录系统后，在当前命令窗口下输入命令：ls / 
以下是对一些目录的解释：
/bin：bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。
/home：用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。
/root：该目录为系统管理员，也称作超级权限者的用户主目录。
/usr：usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。
在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件：
/etc、/bin、 /sbin、 /usr/bin、 /usr/sbin、/var


Linux 忘记密码解决方法
忘记Linux系统的root密码--进入单用户模式更改root密码即可。
或者使用系统安装光盘的救援模式。


Linux 远程登录
Linux 一般作为服务器使用，一般放在机房，你不可能在机房操作你的 Linux 服务器。这时就需要远程登录到Linux服务器来管理维护系统。
Linux 系统中通过 ssh 服务实现远程登录功能。
Window 系统上 Linux 远程登录客户端有 SecureCRT, Putty, SSH Secure Shell 等。

使用密钥认证机制远程登录linux：
①使用工具 PUTTYGEN.EXE 生成密钥对（可以给你的密钥输入一个密码Key Passphrase）。
②到远程 linux 主机上设置。


Linux 文件基本属性
Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。
为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。
通常使用以下两个命令来修改文件或目录的所属用户与权限：
chown (change owner) ：修改所属用户与组。
chmod (change mode) ：修改用户的权限。
通过 chown 来授权用户，通过 chmod 为用户设置可以开门的权限。

可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组。

每个文件的属性由左边第一部分的 10 个字符来确定。
从左至右用 0-9 来表示。
第 0 位确定文件类型（d目录，-文件，l链接文档，等）。
接下来的字符以三个为一组，均为 rwx 三个参数的组合。
r 代表可读(read)、 w 代表可写(write)、 x 代表可执行(execute)。- 表示没有此权限。
第 1-3 位确定属主（该文件的所有者）的权限。
第 4-6 位确定属组（所有者的同组用户）的权限，
第 7-9 位确定其他用户的权限。

Linux文件属主和属组
文件有一个特定的所有者，也就是对该文件具有所有权的用户。
文件所有者以外的用户又可以分为文件所属组的同组用户和其他用户。
因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。
对于 root 用户来说，一般情况下，文件的权限对其不起作用。

更改文件属性
更改文件属组：
chgrp [-R] 属组名 文件名
-R：递归更改文件属组。更改某个目录文件的属组时，该目录下的所有文件的属组都会更改。

更改文件所有者，也可以同时更改文件所属组：
chown [–R] 所有者 文件名
chown [-R] 所有者:属组名 文件名

更改文件9个属性：
①Linux 文件的基本权限有九个，可以使用数字来代表各个权限（r:4,w:2,x:1），每种身份的权限分数累加起来拼在一起得到权限数字。
chmod [-R] xyz 文件或目录      --xyz为权限数字
②用 u g o 来代表三种身份（user，group，others）， a 代表全部的身份
+(加入)，-(除去)，=(设定)
权限写成 r, w, x
chmod u=rwx,g=rx,o=r 文件名
chmod  a-x 文件名


Linux 文件与目录管理
Linux 的目录结构为树状结构，最顶级的目录为根目录 /。
绝对路径：路径由根目录 / 写起。
相对路径：路径不由 / 写起。


处理目录的常用命令：
使用 man [命令] 来查看各个命令的使用文档。

ls（list files）: 列出目录及文件名
ls [-adl] 目录名称
-a ：全部的文件，连同隐藏文件(开头为.的文件) 一起列出来
-d ：仅列出目录本身，而不是列出目录内的文件数据
-l ：长数据串列出，包含文件的属性与权限等等数据

cd（change directory）：切换目录
cd [相对路径或绝对路径]
. 表示当前目录
.. 表示上一级目录
~ 表示home目录

pwd（print work directory）：显示目前的目录
pwd [-P]
-P ：显示出确实的路径，而非使用链接 (link) 路径。

mkdir（make directory）：创建一个新的目录
mkdir [-mp] 目录名称
-m ：配置文件的权限，如果没有加上 -m 来强制配置属性，系统会使用默认属性。
-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建
mkdir -m 711 test2
mkdir -p test1/test2/test3/test4      --自行帮你创建多层目录

rmdir（remove directory）：删除一个空的目录
rmdir [-p] 目录名称
-p ：从该目录起，一次删除多级空目录
rmdir -p test1/test2/test3/test4
使用 rm 命令来删除非空目录。

cp（copy file）: 复制文件或目录
cp [-adfilprsu] 来源档(source) 目标档(destination)
-a：相当于 -pdr
-d：若来源档为link file，则复制链接档属性而非文件本身；
-f：强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；
-i：若目标档已经存在时，在覆盖时会先询问动作的进行
-l：进行硬式链接(hard link)的链接档创建，而非复制文件本身；
-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；
-r：递归持续复制，用于目录的复制；
-s：复制成为符号链接档 (symbolic link)，亦即『捷径』文件；
-u：若 destination 比 source 旧才升级 destination！

rm（remove）: 删除文件或目录
rm [-fir] 文件或目录
-f ：force，忽略不存在的文件，不会出现警告信息；
-i ：在删除前会询问使用者是否动作
-r ：递归删除！最常用在目录的删除了！这是非常危险的选项！！！

mv（move file）: 移动文件与目录，或修改文件与目录的名称
mv [-fiu] source destination
-f ：force，如果目标文件已经存在，不会询问而直接覆盖；
-i ：若目标文件已经存在，会询问是否覆盖！
-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)


Linux 文件内容查看：
使用 man [命令] 来查看各个命令的使用文档。

cat  由第一行开始显示文件内容
cat [-AbEnTv]
-A ：相当于 -vET ，可列出一些特殊字符而不是空白而已；
-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！
-E ：将结尾的断行字节 $ 显示出来；
-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；
-T ：将 [tab] 按键以 ^I 显示出来；
-v ：列出一些看不出来的特殊字符

tac  从最后一行开始显示，可以看出 tac 是 cat 的倒着写！

nl   显示的时候，顺道输出行号
nl [-bnw] 文件
-b ：指定行号指定的方式，主要有两种：
-b a ：不论是否为空行，都列出行号(类似 cat -n)；
-b t ：如果有空行，空行不列行号(默认值)；
-n ：列出行号表示的方法，主要有三种：
-n ln ：行号在荧幕的最左方显示；
-n rn ：行号在自己栏位的最右方显示，且不加 0 ；
-n rz ：行号在自己栏位的最右方显示，且加 0 ；
-w ：行号栏位的占用的位数。

more 一页一页的显示文件内容
在 more 这个程序的运行过程中：
空白键 (space)：代表向下翻一页；
Enter         ：代表向下翻一行；
/字串         ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；
:f            ：立刻显示出档名以及目前显示的行数；
q             ：代表立刻离开 more ，不再显示该文件内容。
b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。

less 与 more 类似，但是比 more 更好的是，他可以往前翻页！
less运行时可以输入的命令有：
空白键    ：向下翻动一页；
[pagedown]：向下翻动一页；
[pageup]  ：向上翻动一页；
/字串     ：向下搜寻『字串』的功能；
?字串     ：向上搜寻『字串』的功能；
n         ：重复前一个搜寻 (与 / 或 ? 有关！)
N         ：反向的重复前一个搜寻 (与 / 或 ? 有关！)
q         ：离开 less 这个程序；

head 只看头几行
head [-n number] 文件 
-n ：后面接数字，代表显示几行的意思
默认的情况中，显示前面 10 行

tail 只看尾巴几行
tail [-n number] 文件 
-n ：后面接数字，代表显示几行的意思
默认的情况中，显示最后的十行
-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测


Linux 用户和用户组管理
Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。
用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。
每个用户账号都拥有一个唯一的用户名和各自的口令。
用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。
实现用户账号的管理，要完成的工作主要有如下几个方面：
①用户账号的添加、删除与修改。
②用户口令的管理。
③用户组的管理。


Linux系统用户账号的管理
主要涉及到用户账号的添加、修改和删除。
添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。
添加新的用户账号：
useradd 选项 用户名
-c comment 指定一段注释性描述。
-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。
-g 用户组 指定用户所属的用户组。
-G 用户组，用户组 指定用户所属的附加组。
-s Shell文件 指定用户的登录Shell。
-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。
useradd –d  /home/sam -m sam
useradd -s /bin/sh -g group –G adm,root gem
增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group等。
Linux提供了集成的系统管理工具userconf，它可以用来对用户账号进行统一管理。

删除帐号
删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。
删除一个已有的用户账号：
userdel 选项 用户名
常用的选项是 -r，作用是把用户的主目录一起删除。

修改帐号
根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。
修改已有用户的信息：
usermod 选项 用户名
常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。
另外，有些系统可以使用选项：-l 新用户名
这个选项指定一个新的账号，即将原来的用户名改为新的用户名。
usermod -s /bin/ksh -d /home/z –g developer sam


用户口令的管理
用户账号刚创建时没有口令，被系统锁定无法使用，必须为其指定口令后才可以使用，即使是指定空口令。
指定和修改用户口令的Shell命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能修改自己的口令。
passwd 选项 用户名
-l 锁定口令，即禁用账号。
-u 口令解锁。
-d 使账号无口令。
-f 强迫用户下次登录时修改口令。
如果默认用户名，则修改当前用户的口令：
passwd 
passwd sam     --超级用户可以指定任何用户的口令
为用户指定空口令：
passwd -d sam    --此命令将用户 sam 的口令删除，系统不再允许该用户登录。


Linux系统用户组的管理
每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。
不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。

用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。
增加一个新的用户组：
groupadd 选项 用户组
-g GID 指定新用户组的组标识号（GID）。
-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。
groupadd group1   --向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。
groupadd -g 101 group2

删除一个已有的用户组：
groupdel 用户组

修改用户组的属性：
groupmod 选项 用户组
-g GID 为用户组指定新的组标识号。
-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。
-n 新用户组，将用户组的名字改为新名字
groupmod –g 10000 -n group3 group2

如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。
用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组：
newgrp root
类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。


与用户账号有关的系统文件
完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。
与用户和用户组相关的信息都存放在一些系统文件中。

/etc/passwd文件是用户管理工作涉及的最重要的一个文件。
Linux系统中的每个用户都在/etc/passwd文件中有一个对应的记录行，它记录了这个用户的一些基本属性。这个文件对所有用户都是可读的。
/etc/passwd中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段：
用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell
系统中有一类用户称为伪用户。这些用户在/etc/passwd文件中也占有一条记录，但是它们的登录Shell为空，不能登录。
它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。

由于/etc/passwd文件所有用户均可读，若用户的密码太简单或规律比较明显的话，很容易被破解。
因此对安全性要求较高的Linux系统都把加密后的口令字分离出来，单独存放在一个文件中，即/etc/shadow文件。 
超级用户才拥有该文件读权限，保证了用户密码的安全性。
/etc/shadow中的记录行与/etc/passwd中的一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生：
登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志

用户组的所有信息都存放在/etc/group文件中。
组名:口令:组标识号:组内用户列表
将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。
每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。
当一个用户同时是多个组中的成员时，在/etc/passwd文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。
用户要访问属于附加组的文件时，必须首先使用newgrp命令使自己成为所要访问的组中的成员。

添加批量用户 
①先编辑一个文本用户文件。
每一列按照/etc/passwd密码文件的格式书写。注意每个用户的用户名、UID、宿主目录都不可以相同，其中密码栏可以留做空白或输入x号。
②以root身份执行命令 /usr/sbin/newusers，从刚创建的用户文件user.txt中导入数据，创建用户：
newusers < user.txt
然后可以执行命令 vipw 或 vi /etc/passwd 检查 /etc/passwd 文件是否已经出现这些用户的数据，并且用户的宿主目录是否已经创建。
③执行命令/usr/sbin/pwunconv。
将 /etc/shadow 产生的 shadow 密码解码，然后回写到 /etc/passwd 中，并将/etc/shadow的shadow密码栏删掉。
这是为了方便下一步的密码转换工作，即先取消 shadow password 功能。
pwunconv
④编辑每个用户的密码对照文件。
用户名:密码
⑤以 root 身份执行命令 /usr/sbin/chpasswd。
创建用户密码，chpasswd 会将经过 /usr/bin/passwd 命令编码过的密码写入 /etc/passwd 的密码栏。
chpasswd < passwd.txt
⑥确定密码经编码写入/etc/passwd的密码栏。
执行命令 /usr/sbin/pwconv 将密码编码为 shadow password，并将结果写入 /etc/shadow。
pwconv
完成创建。之后可以到/home下检查这些用户宿主目录的权限设置是否都正确，并登录验证用户密码是否正确。


Linux 磁盘管理
Linux 磁盘管理好坏直接关系到整个系统的性能问题。
Linux 磁盘管理常用三个命令为 df、du 和 fdisk：
df（disk free）：列出文件系统的整体磁盘使用量
du（disk used）：检查磁盘空间使用量
fdisk：用于磁盘分区

df
检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。
df [-ahikHTm] [目录或文件名]
-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；
-k ：以 KBytes 的容量显示各文件系统；
-m ：以 MBytes 的容量显示各文件系统；
-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；
-H ：以 M=1000K 取代 M=1024K 的进位方式；
-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；
-i ：不用硬盘容量，而以 inode 的数量来显示
df      --不加任何选项，会将系统内所有的文件 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量列出来
将系统内的所有特殊文件格式及名称都列出来：
df -aT

du
也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看
du [-ahskm] 文件或目录名称
-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。
-h ：以人们较易读的容量格式 (G/M) 显示；
-s ：仅显示指定目录或文件的总大小，而不显示其子目录的大小。
-S ：包括子目录下的总计，与 -s 有点差别。
-k ：以 KBytes 列出容量显示；
-m ：以 MBytes 列出容量显示；
du    --只列出当前目录下的所有文件夹容量（包括隐藏文件夹）
检查根目录底下每个目录所占用的容量：
du -sm /*     --通配符 * 来代表每个目录
与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。

fdisk
Linux 的磁盘分区表操作工具。
fdisk [-l] 装置名称
-l ：输出后面接的装置所有的分区内容。仅有 fdisk -l 时，系统会把整个系统内能够搜寻到的装置的分区均列出来。
列出所有分区信息：
fdisk -l
找出你系统中的根目录所在磁盘，并查阅该硬盘内的相关信息：
df /     --重点在找出磁盘文件名
fdisk /dev/hdc   --不要加上数字！
Command (m for help):    --输入 m 后，就会看到命令介绍（d n p q w...）
离开 fdisk 时按下 q，那么所有的动作都不会生效。 按下w就是动作生效的意思。

磁盘格式化
磁盘分割完毕后自然就是要进行文件系统的格式化。
mkfs [-t 文件系统格式] 装置文件名
-t ：可以接文件系统格式，例如 ext3, ext2, vfat 等(系统有支持才会生效)
查看 mkfs 支持的文件格式:
mkfs[tab][tab]
将分区 /dev/hdc6（可指定你自己的分区） 格式化为 ext3 文件系统：
mkfs -t ext3 /dev/hdc6

磁盘检验
fsck（file system check）用来检查和维护不一致的文件系统。
若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查。
fsck [-t 文件系统] [-ACay] 装置名称
-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数
-s : 依序一个一个地执行 fsck 的指令来检查
-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查
-C : 显示完整的检查进度
-d : 打印出 e2fsck 的 debug 结果
-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行
-R : 同时有 -A 条件时，省略 / 不检查
-V : 详细显示模式
-a : 如果检查有错则自动修复
-r : 如果检查有错则由使用者回答是否修复
-y : 选项指定检测每个文件是自动输入yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。
查看系统有多少文件系统支持的 fsck 命令：
fsck[tab][tab]
强制检测 /dev/hdc6 分区:
fsck -C -f -t ext3 /dev/hdc6 
如果没有加上 -f ，由于这个文件系统不曾出现问题，检查会非常快速！若加上 -f 强制检查，才会一项一项的显示过程。

磁盘挂载与卸除
磁盘挂载:
mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点
用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面:
mkdir /mnt/hdc6
mount /dev/hdc6 /mnt/hdc6
df
磁盘卸载:
umount [-fn] 装置文件名或挂载点
-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下。
-n ：不升级 /etc/mtab 情况下卸除。
卸载/dev/hdc6:
umount /dev/hdc6


Linux vi/vim
所有的 Unix Like 系统都会内建 vi 文书编辑器。但目前使用比较多的是 vim 编辑器。
vi 是老式的字处理器，功能虽已很齐全，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。
vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。
vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。
vim 官方网站：https://www.vim.org/

vi/vim 的使用
基本上 vi/vim 共分为三种模式。

命令模式（Command Mode）
用户刚刚启动 vi/vim，便进入了命令模式。
此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符
普通模式常用的几个命令：
i -- 切换到输入模式，在光标当前位置开始输入文本。
x -- 删除当前光标所在处的字符。
: -- 切换到底线命令模式，以在最底一行输入命令。
a -- 进入插入模式，在光标下一个位置开始输入文本。
o -- 在当前行的下方插入一个新行，并进入插入模式。
O -- 在当前行的上方插入一个新行，并进入插入模式。
dd -- 剪切当前行。
yy -- 复制当前行。
p（小写） -- 粘贴剪贴板内容到光标下方。
P（大写）-- 粘贴剪贴板内容到光标上方。
u -- 撤销上一次操作。
Ctrl + r -- 重做上一次撤销的操作。
:w -- 保存文件。
:q -- 退出 Vim 编辑器。
:q! -- 强制退出Vim 编辑器，不保存修改。
命令模式只有一些最基本的命令，因此仍要依靠底线命令行模式输入更多命令。

输入模式（Insert Mode）
在命令模式下按 i 就进入了输入模式，使用 Esc 返回到普通模式。
可以使用以下按键：
字符按键以及Shift组合，输入字符；
ENTER，回车键，换行；
BACK SPACE，退格键，删除光标前一个字符；
DEL，删除键，删除光标后一个字符；
方向键，在文本中移动光标；
HOME/END，移动光标到行首/行尾；
Page Up/Page Down，上/下翻页；
Insert，切换光标为输入/替换模式，光标将变成竖线/下划线；
ESC，退出输入模式，切换到命令模式。

底线命令模式（Command-Line Mode）
在命令模式下按下 :（英文冒号）就进入了底线命令模式。
底线命令模式可用的命令非常多。
基本的命令有：
:w：保存文件；
:q：退出 Vim 编辑器；
:wq：保存文件并退出 Vim 编辑器；
:q!：强制退出Vim编辑器，不保存修改。
按 ESC 键可随时退出底线命令模式。

vi/vim 使用实例
①使用 vi/vim 进入一般模式：
vi 文件名     --vi 后面一定要加文件名，不管该文件存在与否
②在一般模式之中，按下 i, o, a 等字符就可以进入输入模式
③按下 ESC 按钮回到一般模式
④在一般模式中按下 :wq 储存后离开 vi

vi/vim 按键说明
其实 vim 还有非常多的按键可以使用。
在 vi/vim 中，数字是很有意义的！数字通常代表重复做几次的意思，也有可能是代表去到第几个什么什么的意思。


Linux yum 命令
yum（Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。
基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装。可以自动处理依赖性关系，一次安装所有依赖的软件包，无须繁琐地一次次下载安装。
yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。

yum [options] [command] [package ...]
options：可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 "yes"），-q（不显示安装的过程）等等。
command：要进行的操作。
package：安装的包名。

yum常用命令
列出所有可更新的软件清单：
yum check-update
更新所有软件：
yum update
仅安装指定的软件：
yum install <package_name>
仅更新指定的软件：
yum update <package_name>

列出所有可安裝的软件清单：
yum list
利用 yum 功能，找出以 pam 为开头的软件名称有哪些：
yum list pam*
查找软件包：
yum search <keyword>
删除软件包：
yum remove <package_name>
清除缓存:
清除缓存目录下的软件包: 
yum clean packages
清除缓存目录下的 headers：
yum clean headers
清除缓存目录下旧的 headers：
yum clean oldheaders:
清除缓存目录下的软件包及旧的 headers：
yum clean, yum clean all (= yum clean packages; yum clean oldheaders)

国内 yum 源
网易（163）yum 源是国内较好的 yum 源之一。
将yum源设置为163 yum，可以提升软件包安装和更新的速度，同时避免一些常见软件版本无法找到。
中科大和搜狐也是国内不错的 yum 源。


Linux apt 命令
apt（Advanced Packaging Tool）是一个在 Debian 和 Ubuntu 中的 Shell 前端软件包管理器。
apt 命令提供了查找、安装、升级、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。
apt 命令执行需要超级管理员权限(root)。

apt [options] [command] [package ...]
options：可选，选项包括 -h（帮助），-y（当安装过程提示选择全部为"yes"），-q（不显示安装的过程）等等。
command：要进行的操作。
package：安装的包名。

apt 常用命令
列出所有可更新的软件清单：
sudo apt update
升级软件包：
sudo apt upgrade
可以将以下两个命令组合起来，一键升级：
sudo apt update && sudo apt upgrade -y
列出可更新的软件包及版本信息：
apt list --upgradeable
更新指定的软件：
sudo apt update <package_name>
升级软件包，升级前先删除需要更新软件包：
sudo apt full-upgrade

安装指定的软件：
sudo apt install <package_name>     --如果不记得完整的包名，可以只输入前半部分的包名，按 Tab 键列出相关的包名。
如果我们想安装一个软件包，但如果软件包已经存在，则不要升级它，可以使用 –no-upgrade 选项:
sudo apt install <package_name> --no-upgrade
如果只想升级，不要安装可以使用 --only-upgrade 参数：
sudo apt install <package_name> --only-upgrade
设置指定安装版本：
sudo apt install <package_name>=<version_number>
安装多个软件包：
sudo apt install <package_1> <package_2> <package_3>

显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：
sudo apt show <package_name>
查找软件包： 
sudo apt search <keyword>
查找名为 libimobile 的相关包：
apt search libimobile
列出所有已安装的包：
apt list --installed
列出所有已安装的包的版本信息：
apt list --all-versions
删除软件包：
sudo apt remove <package_name>
移除软件包及配置文件: 
sudo apt purge <package_name>
清理不再使用的依赖和库文件: 
sudo apt autoremove
